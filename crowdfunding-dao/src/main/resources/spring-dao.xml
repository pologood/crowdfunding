<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/data/jpa 
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!--value>${jdbc.file.path}</value-->
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${jdbc.initialSize}" /><!-- 初始大小 -->
        <property name="maxActive" value="${jdbc.maxActive}" />    <!-- 最大活跃数 -->
        <property name="maxWait" value="${jdbc.maxWait}" />        <!-- 最长等待时间，单位毫秒 -->
        <property name="maxIdle" value="${jdbc.maxIdle}" />        <!-- 队列中的最大等待数 -->
        <property name="minIdle" value="${jdbc.minIdle}" />        <!-- 队列中的最小等待数 -->
        <!--property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" /-->
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}" />
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        
        <property name="testOnBorrow" value="false" /><!-- 借出连接时不要测试，否则很影响性能 -->
        <property name="testWhileIdle" value="true" /><!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. -->

        <property name="validationQuery" value="SELECT 1"/>
        
        <property name="timeBetweenEvictionRunsMillis" value="30000" /><!-- 每30秒运行一次空闲连接回收器 -->
        <property name="minEvictableIdleTimeMillis" value="1800000" /><!-- 池中的连接空闲30分钟后被回收,默认值就是30分钟  -->
        <property name="numTestsPerEvictionRun" value="3" /><!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量，默认值就是3 -->

        <property name="logAbandoned" value="true" />
        <property name="removeAbandoned" value="true" /><!-- 连接泄漏回收参数，当可用连接数少于3个时才执行 -->
        <property name="removeAbandonedTimeout" value="180" /><!-- 连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值 -->
        
    </bean>

    <!-- 事务管理 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" order="1"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:com/youku/share/crowdfunding/dao/*.xml" />
        <property name="typeAliasesPackage" value="com.youku.share.crowdfunding.po" />
    </bean>

    <!-- 指定Mapper类包名 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.youku.share.crowdfunding.dao" />
    </bean>

    <!-- Spring注解 @Component -->
    <context:component-scan base-package="com.youku.share.crowdfunding.manager.impl" />

</beans>